set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# To give events to vim to perform reloads
set -g focus-events on

set -g set-titles on
set -g set-titles-string "#W"

# Don't delay sending escape to vim - so we don't see a delay when getting out
# of insert mode.
set -sg escape-time 0

# As close to unlimited history as we can get
set -g history-limit 10000

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind C send-keys -R \; clear-history \; send-keys "Enter"

set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION"

bind ^a last-window # toggle last window like screen

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

bind ^s split-window -v -c "#{pane_current_path}"
bind ^v split-window -h -c "#{pane_current_path}"

# hold shift for a subordinate window split
bind S split-window -v -p 30 -c "#{pane_current_path}"
bind V split-window -h -p 30 -c "#{pane_current_path}"
bind q split-window -v -p 30 -c "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind ^h select-pane -L
bind ^j select-pane -D
bind ^k select-pane -U
bind ^l select-pane -R

# arrows for the wimps
bind Left  select-pane -L
bind Down  select-pane -D
bind Up    select-pane -U
bind Right select-pane -R

# swap panes by holding shift and doing vim up/down
bind J swap-pane -D
bind K swap-pane -U

bind B break-pane
bind P choose-tree "move-pane -h -s "%%""

bind R resize-pane -x 120

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-s if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind -n M-Left if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n M-Up if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n M-Down if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n M-Right if-shell "$is_vim" "send-keys C-l" "select-pane -R"

bind c new-window -c "#{pane_current_path}"

# vi-style controls for copy mode
setw -g mode-keys vi

bind -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on
bind m set -g mouse on \; display 'Mouse: ON'
bind M set -g mouse off \; display 'Mouse: OFF'
# Fix from: https://github.com/tmux/tmux/issues/145
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# set-option -g status-bg white
# set-option -g status-fg black
set-option -g status-interval 5
set-option -g visual-activity on
# set-window-option -g monitor-activity on
# set-window-option -g window-status-current-fg white

# source ~/.dotfiles/tmux.d/emp.tmux

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin "arcticicestudio/nord-tmux"

run ~/.dotfiles/tmux.d/tpm/tpm
